---

groot: /galaxy-central
galaxy_manage_clone: false
galaxy_manage_download: false
galaxy_manage_existing: true
galaxy_config_perms: 0640
galaxy_create_user: false
galaxy_create_privsep_user: false
galaxy_manage_paths: false
galaxy_manage_static_setup: false
galaxy_fetch_dependencies: false
galaxy_manage_mutable_setup: false
galaxy_server_dir: "{{ groot }}"
galaxy_virtual_env: /galaxy_venv
galaxy_manage_gravity: true
galaxy_manage_systemd: true
galaxy_systemd_mode: gravity
galaxy_manage_systemd_reports: false
galaxy_manage_errordocs: false
galaxy_build_client: false
galaxy_venv_dir: /galaxy_venv # used in the galaxyproject.galaxy playbook. Sure to be a really good reason.
galaxy_config_file: /etc/galaxy/galaxy.yml
galaxy_manage_database: false
galaxy_gravity_state_dir: "{{ groot }}/database/gravity"

# this sets the installation destination
REL: "release_23.0"
GALZIP: "https://github.com/galaxyproject/galaxy/archive/refs/heads/{{ REL }}.zip"
# Python 3 support
pip_virtualenv_command: /usr/bin/python3 -m virtualenv # usegalaxy_eu.certbot, usegalaxy_eu.tiaas2, galaxyproject.galaxy
certbot_virtualenv_package_name: python3-virtualenv    # usegalaxy_eu.certbot
pip_package: python3-pip                               # geerlingguy.pip

# PostgreSQL
postgresql_objects_users:
  - name: "{{ galaxy_user }}"
postgresql_objects_databases:
  - name: "galaxydev"
    owner: "{{ galaxy_user }}"

# PostgreSQL Backups
postgresql_backup_dir: "{{ groot }}/data/backups"
postgresql_backup_local_dir: "{{ '~postgres' | expanduser }}/backups"

galaxy_root: "{{ groot }}"
galaxy_user: galaxy
galaxy_config_dir: "{{ galaxy_root }}/config"
miniconda_prefix: "{{ galaxy_root }}/database/dependencies/_conda"
miniconda_version: 4.7.12
miniconda_manage_dependencies: false
galaxy_config_perms: 0640



